{"version":3,"sources":["components/QuestionContainer.js","screens/QuizScreen.js","constants/colors.js","screens/ResultScreen.js","components/Card.js","screens/StartQuizScreen.js","components/Header.js","App.js"],"names":["styles","StyleSheet","create","questionContainer","width","padding","margin","maxWidth","alignItems","alignSelf","alignContent","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","backgroundColor","elevation","borderRadius","QuestionContainer","children","style","View","Question","item","textColor","list","Text","title","question","container","flex","marginTop","StatusBar","currentHeight","marginVertical","marginHorizontal","fontSize","ansButton","endButton","QuizScreen","props","data","selectedAnswersHook","selectedAnswers","setSelectedAnswers","onCalculate","SafeAreaView","FlatList","renderItem","listItems","answers","map","elem","TouchableOpacity","Button","answer","color","some","iter","questionId","key","selectedAnswer","onPress","arrCopy","slice","splice","findIndex","extraData","ResultScreen","onRestartQuiz","useState","charName","setCharName","undefined","animeName","setAnimeName","charURI","setCharURI","getAnime","id","a","async","fetch","response","status","json","kitsu","deserialise","characters","length","charID","Math","floor","charData","character","console","log","name","canonicalTitle","image","original","newId","toString","parseInt","useEffect","resultString","forEach","element","resIdx","Image","tinyImg","source","uri","present","waifuName","colors","resizeMode","textAlign","fontWeight","fontsize","fontStyle","card","justifyContent","Card","screen","flexDirection","button","buttonContainer","StartQuizScreen","onStartGame","header","justifyCOntent","headerTitle","Header","App","setData","gameState","setGameState","content","setContent","restartQuiz","stuff","require","Questions","index","ansIdx"],"mappings":"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","file":"static/js/app.af9161ff.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { View, StyleSheet, Button } from \"react-native\";\r\n\r\nconst QuestionContainer = ({children, style}) => {\r\n  return <View style={[styles.questionContainer, style]}>\r\n    {children}\r\n  </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    questionContainer: {\r\n        width: '60%',\r\n        padding: 10,\r\n        margin: 10,\r\n        maxWidth: '80%',\r\n        alignItems: 'center',\r\n        alignSelf:'center',\r\n        alignContent:'center',\r\n        shadowColor: 'black',\r\n        shadowOffset: {width: 0, height: 2},\r\n        shadowOpacity: .26,\r\n        shadowRadius: 6,\r\n        backgroundColor: 'white',\r\n        elevation: 5, //Only Android\r\n        padding: 20,\r\n        borderRadius: 10\r\n    }\r\n})\r\n\r\nexport default QuestionContainer;","import React, { useState, useEffect } from \"react\";\r\nimport { FlatList, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity, Button } from \"react-native\";\r\nimport { View } from \"react-native-web\";\r\nimport QuestionContainer from \"../components/QuestionContainer\";\r\n\r\n\r\nconst Question = ({ item, backgroundColor, textColor, list }) => (\r\n  <QuestionContainer style={[styles.item, backgroundColor]}>\r\n    <Text style={[styles.title, textColor]}>{item.question}</Text>\r\n    {list}\r\n  </QuestionContainer>\r\n);\r\n\r\nconst QuizScreen = (props) => {\r\n  const {\r\n    data,\r\n    selectedAnswersHook: [selectedAnswers, setSelectedAnswers],\r\n    onCalculate\r\n  } = props;\r\n\r\n  const renderItem = ({ item: question }) => {\r\n    // setSelectedItems(\r\n    //   [...selectedItems, {questionId: item.key, selectedAnswer: undefined } ]\r\n    // );\r\n\r\n    const listItems = question.answers.map((elem) =>\r\n      <TouchableOpacity style={styles.ansButton} key={elem.key}>\r\n        <Button\r\n          title={elem.answer}\r\n          color={selectedAnswers.some(iter => (iter.questionId == question.key) && (iter.selectedAnswer === elem.key)) ? '#83329c' : '#cb42f5'}\r\n          onPress={() => {\r\n            if (selectedAnswers.some((iter) => iter.questionId === question.key)) {\r\n              const arrCopy = selectedAnswers.slice();\r\n              arrCopy.splice(\r\n                arrCopy.findIndex((iter) => iter.questionId === question.key),\r\n                1,\r\n                { questionId: question.key, selectedAnswer: elem.key }\r\n              );\r\n              setSelectedAnswers(arrCopy);\r\n            } else {\r\n              setSelectedAnswers(\r\n                [...selectedAnswers, { questionId: question.key, selectedAnswer: elem.key }]\r\n              );\r\n            }\r\n          }}\r\n        />\r\n      </TouchableOpacity>\r\n    );\r\n\r\n    // const backgroundColor = item.key === selectedItems ? \"#6e3b6e\" : \"#f9c2ff\";\r\n    // const color = item.key === selectedItems ? 'white' : 'black';\r\n\r\n    return (\r\n      <Question\r\n        item={question}\r\n        // backgroundColor={{ backgroundColor }}\r\n        // textColor={{ color }}\r\n        list={listItems}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FlatList\r\n        data={data}\r\n        renderItem={renderItem}\r\n        extraData={selectedAnswers}\r\n      />\r\n      <View style={styles.endButton} >\r\n        <Button color='#6fb5de' onPress={() => (onCalculate(2))} title=\"Encuentra mi waifu uwu ~\" />\r\n      </View>\r\n\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: StatusBar.currentHeight || 0,\r\n  },\r\n  item: {\r\n    alignSelf: 'center',\r\n    alignContent: 'center',\r\n    padding: 20,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n  },\r\n  title: {\r\n\r\n    fontSize: 32,\r\n  },\r\n  ansButton: {\r\n    margin: 10,\r\n    width: '90%'\r\n  },\r\n  endButton: {\r\n    width: '60%',\r\n    alignSelf: 'center',\r\n    alignContent: 'center',\r\n    margin: 10\r\n  }\r\n});\r\n\r\n\r\nexport default QuizScreen","export default{\r\n    background: \"#FFFFFF\",\r\n    primary: \"#CB42F5\",\r\n    secondary: \"#B60BEA\",\r\n    tertiary: \"#E49EFA\"\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, Button } from 'react-native'\r\nimport { deserialise } from 'kitsu-core'\r\nimport colors from '../constants/colors';\r\nimport QuestionContainer from '../components/QuestionContainer';\r\n\r\nconst ResultScreen = (props) => {\r\n  const {\r\n    selectedAnswers,\r\n    onRestartQuiz,\r\n  } = props;\r\n  const [charName, setCharName] = useState(\"how to rotate text in mspaint\");\r\n  const [animeName, setAnimeName] = useState(undefined);\r\n  const [charURI, setCharURI] = useState(undefined);\r\n\r\n  const getAnime = async (id) => {\r\n    const response = await fetch(`https://kitsu.io/api/edge/anime/${id}?include=characters,characters.character`);\r\n    if (response.status == 200) {\r\n      const json = await response.json();\r\n      const kitsu = deserialise(json);\r\n\r\n      if (kitsu.data.characters.data.length > 0) {\r\n        var charID = id;\r\n\r\n        while (kitsu.data.characters.data[charID] === undefined) {\r\n          charID = Math.floor(charID / 2);\r\n        }\r\n\r\n        const charData = kitsu.data.characters.data[charID].character.data;\r\n        console.log('charData', charData);\r\n        setCharName(charData.name);\r\n        setAnimeName(kitsu.data.canonicalTitle);\r\n        setCharURI(charData.image.original);\r\n        return;\r\n      }\r\n    }\r\n    // fallback\r\n    var newId = id.toString();\r\n    newId = parseInt(newId.slice(0, 1)) + parseInt(newId.slice(1));\r\n    getAnime(newId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // map answers to characters\r\n    var resultString = \"\";\r\n\r\n    selectedAnswers.forEach(element => {\r\n      resultString += element.selectedAnswer;\r\n    });\r\n    console.log('resultString', resultString);\r\n    const resIdx = parseInt(resultString);\r\n    getAnime(resIdx);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        style={styles.tinyImg}\r\n        source={{ uri: charURI, }}\r\n      />\r\n      <Text style={styles.present}>Tu waifu ideal es:</Text>\r\n      <Text style={styles.waifuName}>{charName}</Text>\r\n      <Text style={styles.animeName}>{animeName}</Text>\r\n      <Button onPress={() => (onRestartQuiz())} title='Reiniciar el Quiz' color={colors.secondary}></Button>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ResultScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 0,\r\n  },\r\n  tinyImg: {\r\n    marginTop: 30,\r\n    width: 300,\r\n    height: 300,\r\n    resizeMode: 'contain',\r\n  },\r\n  present: {\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n    margin: 10,\r\n  },\r\n  waifuName: {\r\n    fontSize: 22,\r\n    color: colors.primary,\r\n    fontWeight: \"bold\",\r\n    textAlign: 'center',\r\n    margin: 10,\r\n  },\r\n  animeName: {\r\n    fontsize: 17,\r\n    fontStyle: 'italic',\r\n    textAlign: 'center',\r\n    margin: 10,\r\n    color: colors.secondary\r\n  }\r\n})","import React from 'react'\r\nimport {View, StyleSheet} from 'react-native';\r\nimport colors from '../constants/colors';\r\n\r\nconst Card = ({children, style}) => {\r\n  return (\r\n    <View style={[styles.card,style]}>{children}</View>\r\n  )\r\n}\r\n\r\nconst styles=StyleSheet.create({\r\n    card:{\r\n        height: '100%',\r\n        width:'250%',\r\n        padding: 20,\r\n        backgroundColor: colors.tertiary,\r\n        elevation: 5,\r\n        borderRadius: 10,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n    }\r\n})\r\n\r\nexport default Card","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { View, Image, Button, Text, StyleSheet } from 'react-native'\r\nimport colors from '../constants/colors'\r\nimport Card from '../components/Card'\r\nimport QuizScreen from './QuizScreen'\r\n\r\nconst StartQuizScreen = ({onStartGame}) => {\r\n\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Card>\r\n        <Image\r\n          style={styles.image}\r\n          source={{\r\n            uri: 'https://i1.wp.com/www.senpai.com.mx/wp-content/uploads/2021/06/Las-waifus-de-Fairy-Tail-Nanatsu-no-Taizai-Kanojo-Okarishimasu-y-mas-se-unen-en-un-solo-juego-para-smartphones.jpg?fit=1280%2C720&ssl=1',\r\n          }}\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n            <Button\r\n              style={styles.button}\r\n              title=\"Empezar\"\r\n              onPress={() => (onStartGame(1))}\r\n              color={colors.secondary}\r\n            />\r\n        </View>\r\n      </Card>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8D6CB',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  screen: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    color: '#E8D6CB'\r\n  },\r\n  button: {\r\n    width: 100,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 15\r\n  },\r\n  image: {\r\n    height: '70%',\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default StartQuizScreen","import React from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport colors from '../constants/colors';\r\n\r\nconst Header = ({title}) => {\r\n  return (\r\n    <View style={styles.header}>\r\n      <Text style={styles.headerTitle}>{title}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    width: '100%',\r\n    height: 120,\r\n    padding: 40,\r\n    backgroundColor: colors.primary,\r\n    alignItems: 'center',\r\n    justifyCOntent: 'center'\r\n  },\r\n  headerTitle: {\r\n    color: colors.background,\r\n    fontSize: 30\r\n  }\r\n});\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport QuizScreen from './screens/QuizScreen';\r\n// import QuizScreenTest from './screens/QuizScreenTest';\r\nimport ResultScreen from './screens/ResultScreen';\r\nimport StartQuizScreen from './screens/StartQuizScreen';\r\nimport colors from './constants/colors';\r\nimport Header from './components/Header';\r\n\r\nexport default function App() {\r\n  // json.Questions.map((element, index) => ({ key: index, data: element }))\r\n  const [data, setData] = useState(undefined);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [gameState, setGameState] = useState(0);\r\n  const [content, setContent] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if(gameState === 1){\r\n        setContent(<QuizScreen data={data} onCalculate={setGameState} selectedAnswersHook={[selectedAnswers, setSelectedAnswers]}></QuizScreen>)\r\n      }\r\n      else if (gameState === 2) {\r\n        setContent(<ResultScreen selectedAnswers={selectedAnswers} onRestartQuiz={restartQuiz}/>)\r\n      }\r\n      else {\r\n        setContent(<StartQuizScreen onStartGame={setGameState}></StartQuizScreen>)\r\n      }\r\n      // setContent(<ResultScreen selectedAnswers={selectedAnswers} />)\r\n    }\r\n  }, [gameState, data, selectedAnswers])\r\n\r\n  const restartQuiz = () => {\r\n    console.log(\"Restart\");\r\n    setSelectedAnswers([]);\r\n    setGameState(0);\r\n  }\r\n\r\n  // load and parse data\r\n  useEffect(() => {\r\n    var json = require('./QuestionsAnswers.json'); //(with path)\r\n    const stuff = json.Questions.map((elem, index) => ({\r\n      key: index,\r\n      question: elem.question,\r\n      answers: elem.answers.map((answer, ansIdx) => ({\r\n        key: ansIdx,\r\n        answer: answer.answer\r\n      }))\r\n    }));\r\n    setData(stuff);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header title={\"Waifu Test\"} />\r\n      {content ?\r\n        content :\r\n        <Text>webos con jamon</Text>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"sourceRoot":""}